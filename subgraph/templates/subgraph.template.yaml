specVersion: 1.3.0
indexerHints:
  prune: auto
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: PDPVerifier
    network: {{name}}
    source:
      address: "{{PDPVerifier.address}}"
      abi: PDPVerifier
      startBlock: {{PDPVerifier.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - DataSet
        - Provider
        - Piece
        - Rail
        - RateChangeQueue
        - SumTreeCount
        - FaultRecord
      abis:
        - name: PDPVerifier
          file: ../service_contracts/abi/PDPVerifier.abi.json
      eventHandlers:
        - event: DataSetDeleted(indexed uint256,uint256)
          handler: handleDataSetDeleted
        - event: PiecesRemoved(indexed uint256,uint256[])
          handler: handlePiecesRemoved
        - event: DataSetEmpty(indexed uint256)
          handler: handleDataSetEmpty
        - event: PossessionProven(indexed uint256,(uint256,uint256)[])
          handler: handlePossessionProven
        - event: NextProvingPeriod(indexed uint256,uint256,uint256)
          handler: handleNextProvingPeriod
      file: ./src/pdp-verifier.ts
  - kind: ethereum
    name: FilecoinWarmStorageService
    network: {{name}}
    source:
      address: "{{FilecoinWarmStorageService.address}}"
      abi: FilecoinWarmStorageService
      startBlock: {{FilecoinWarmStorageService.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - DataSet
        - Piece
        - Rail
        - RateChangeQueue
        - SumTreeCount
        - FaultRecord
      abis:
        - name: FilecoinWarmStorageService
          file: ../service_contracts/abi/FilecoinWarmStorageService.abi.json
        - name: PDPVerifier
          file: ../service_contracts/abi/PDPVerifier.abi.json
        - name: ServiceProviderRegistry
          file: ../service_contracts/abi/ServiceProviderRegistry.abi.json
      eventHandlers:
        - event: "DataSetCreated(indexed uint256,indexed uint256,uint256,uint256,uint256,address,address,address,string[],string[])"
          handler: handleDataSetCreated
        - event: "PieceAdded(indexed uint256,indexed uint256,(bytes),string[],string[])"
          handler: handlePieceAdded
        - event: "DataSetServiceProviderChanged(indexed uint256,indexed address,indexed address)"
          handler: handleDataSetServiceProviderChanged
        - event: "RailRateUpdated(indexed uint256,uint256,uint256)"
          handler: handleRailRateUpdated
        - event: "FaultRecord(indexed uint256,uint256,uint256)"
          handler: handleFaultRecord
        - event: "ProviderApproved(indexed uint256)"
          handler: handleProviderApproved
        - event: "ProviderUnapproved(indexed uint256)"
          handler: handleProviderUnapproved
        - event: "PDPPaymentTerminated(indexed uint256,uint256,uint256)"
          handler: handlePDPPaymentTerminated
        - event: "CDNPaymentTerminated(indexed uint256,uint256,uint256,uint256)"
          handler: handleCDNPaymentTerminated
        - event: "DataSetStatusChanged(indexed uint256,indexed uint8,indexed uint8,uint256)"
          handler: handleDataSetStatusChanged
      file: ./src/filecoin-warm-storage-service.ts
  # LEGACY DATA SOURCE: Indexes events from older contract versions so historical data isn’t lost
  # Example: PieceAdded event was upgraded - old had (dataSetId, pieceId, keys[], values[]), new has pieceCid param
  # Upgrade path: Export old ABI to ./abi/FilecoinWarmStorageServiceLegacy.abi.json → add here → define handler
  - kind: ethereum
    name: FilecoinWarmStorageServiceLegacy
    network: {{name}}
    source:
      address: "{{FilecoinWarmStorageService.address}}"
      abi: FilecoinWarmStorageServiceLegacy
      startBlock: {{FilecoinWarmStorageService.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - DataSet
        - Piece
        - Provider
      abis:
        - name: FilecoinWarmStorageServiceLegacy
          file: ./abi/FilecoinWarmStorageServiceLegacy.abi.json
        - name: PDPVerifier
          file: ../service_contracts/abi/PDPVerifier.abi.json
      eventHandlers:
        - event: "PieceAdded(indexed uint256,indexed uint256,string[],string[])"
          handler: handlePieceAdded
      file: ./src/filecoin-warm-storage-service-legacy.ts
  - kind: ethereum
    name: ServiceProviderRegistry
    network: {{name}}
    source:
      address: "{{ServiceProviderRegistry.address}}"
      abi: ServiceProviderRegistry
      startBlock: {{ServiceProviderRegistry.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.9
      language: wasm/assemblyscript
      entities:
        - DataSet
        - Provider
        - ProviderProduct
      abis:
        - name: ServiceProviderRegistry
          file: ../service_contracts/abi/ServiceProviderRegistry.abi.json
      eventHandlers:
        - event: "ProviderRegistered(indexed uint256,indexed address,indexed address)"
          handler: handleProviderRegistered
        - event: "ProviderInfoUpdated(indexed uint256)"
          handler: handleProviderInfoUpdated
        - event: "ProviderRemoved(indexed uint256)"
          handler: handleProviderRemoved
        - event: "ProductAdded(indexed uint256,indexed uint8,address,bytes,string[],string[])"
          handler: handleProductAdded
        - event: "ProductUpdated(indexed uint256,indexed uint8,address,bytes,string[],string[])"
          handler: handleProductUpdated
        - event: "ProductRemoved(indexed uint256,indexed uint8)"
          handler: handleProductRemoved
      file: ./src/service-provider-registry.ts
